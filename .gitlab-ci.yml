stages:
  - build
  - deploy

variables:
  VPS_HOST: "$VPS_HOST"
  DOCKER_IMAGE_NAME: ward-backend-image
  CONTAINER_NAME: ward-backend-container

build_image:
  stage: build
  tags:
    - gc
  script:
    # Remove any existing container and image
    - sudo docker container stop $CONTAINER_NAME || true
    - sudo docker container rm $CONTAINER_NAME || true
    - sudo docker image rm $DOCKER_IMAGE_NAME || true
    # Build the new image
    - sudo docker build -t $DOCKER_IMAGE_NAME .
    - sudo docker save -o nestjs-app.tar $DOCKER_IMAGE_NAME
    - sudo chmod 644 nestjs-app.tar
  artifacts:
    paths:
      - nestjs-app.tar

deploy:
  stage: deploy
  image: bitnami/minideb:latest
  tags:
    - gc
  before_script:
    # Install OpenSSH client
    - install_packages openssh-client
  script:
    # Ensure the destination directory exists
    - ssh $VPS_HOST "mkdir -p /ward/app"
    # Copy the image to the VPS
    - scp nestjs-app.tar $VPS_HOST:/ward/app/nestjs-app.tar
    # SSH into the VPS and deploy the container
    - ssh $VPS_HOST "
        docker container stop $CONTAINER_NAME || true &&
        docker container rm $CONTAINER_NAME || true &&
        docker image rm $DOCKER_IMAGE_NAME || true &&
        docker load -i /ward/app/nestjs-app.tar &&
        docker-compose -f /ward/app/docker-compose.yml up -d
      "
