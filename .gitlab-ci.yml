stages:
  - build
  - deploy

variables:
  VPS_HOST: "$VPS_HOST"
  VPS_IP: "$VPS_IP"
  DOCKER_IMAGE_NAME: ward-backend-image
  CONTAINER_NAME: ward-backend-container
  DB_USERNAME: "$DB_USERNAME"
  DB_PASSWORD: "$DB_PASSWORD"
  DB_DATABASE: "$DB_DATABASE"
  DB_PORT: "$DB_PORT"
  JWT_SECRET: "$JWT_SECRET"
build_image:
  stage: build
  tags:
    - gc
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keygen -R $VPS_IP || true
    - ssh-keyscan $VPS_IP >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - docker container stop $CONTAINER_NAME || true
    - docker container rm $CONTAINER_NAME || true
    - docker image rm $DOCKER_IMAGE_NAME || true
    - docker build -t $DOCKER_IMAGE_NAME .
    - docker save -o nestjs-app.tar $DOCKER_IMAGE_NAME
  artifacts:
    paths:
      - nestjs-app.tar

deploy:
  stage: deploy
  tags:
    - gc
  before_script:
    - sudo apt-get update
    - sudo apt-get install -y openssh-client
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keygen -R $VPS_IP || true
    - ssh-keyscan $VPS_IP >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - ssh $VPS_HOST "whoami"
    - ssh -i ~/.ssh/id_rsa admin11@$VPS_IP "mkdir -p /ward/app && echo 'Directory created.'"
    - scp -i ~/.ssh/id_rsa nestjs-app.tar admin11@$VPS_IP:/ward/app
    - scp -i ~/.ssh/id_rsa docker-compose.yml admin11@$VPS_IP:/ward/app/docker-compose.yml
    - ssh $VPS_HOST "echo -e 'DB_USERNAME=$DB_USERNAME\nDB_PASSWORD=$DB_PASSWORD\nDB_DATABASE=$DB_DATABASE\nDB_PORT=$DB_PORT\nJWT_SECRET=$JWT_SECRET' > /ward/app/.env"
    - scp -i ~/.ssh/id_rsa Dockerfile admin11@$VPS_IP:/ward/app/Dockerfile
    - echo "Deploying container on VPS"
    - ssh -i ~/.ssh/id_rsa admin11@$VPS_IP "/usr/bin/docker container stop $CONTAINER_NAME || true && /usr/bin/docker container rm $CONTAINER_NAME || true && /usr/bin/docker image rm $DOCKER_IMAGE_NAME || true && /usr/bin/docker load -i /ward/app/nestjs-app.tar &&
        cd /ward/app &&
        /usr/bin/docker-compose up -d
        "